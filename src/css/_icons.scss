<% var cacheBusterQueryString = '?' + Math.round(Date.now()/1000) %>
@font-face {
	font-family: "<%= fontName %>";
	src: url('<%= fontPath %><%= fontName %>.eot<%= cacheBusterQueryString %>');
	src: url('<%= fontPath %><%= fontName %>.eot?<%= cacheBusterQueryString %>#iefix') format('eot'),
		// url('<%= fontPath %><%= fontName %>.woff2<%= cacheBusterQueryString %>') format('woff2'),
		url('<%= fontPath %><%= fontName %>.woff<%= cacheBusterQueryString %>') format('woff'),
		url('<%= fontPath %><%= fontName %>.ttf<%= cacheBusterQueryString %>') format('truetype'),
		url('<%= fontPath %><%= fontName %>.svg<%= cacheBusterQueryString %>#<%= fontName %>') format('svg');
}

[class^="icon-"],
[class*=" icon-"]  {
	/* use !important to prevent issues with browser extensions that change fonts */
	font-family: "<%= fontName %>" !important;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	font-size: 20px;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	speak: none;	/* only necessary if not using the private unicode range (firstGlyph option) */
	text-transform: none;
	line-height: 1;
}
<% _.each(glyphs, function(glyph) { %>
.<%= cssClass %>-<%= glyph.fileName %>:before {
	content: "\<%= glyph.codePoint %>";
}
<% if ( glyph.fileName == "info") { %>
/*  Example condicional and scss vars  */
%<%= glyph.fileName %>::after {
	$icon: "\<%= glyph.codePoint %>";
	content: $icon;
	font-family: "<%= fontName %>" !important;
	line-height: 1.4;
}
/* [END] Example condicional and scss vars */
<% }
}); %>
